version: "3"

services:
  postgres-db:
    restart: always
    image: postgres:latest
    environment:
      TZ: "Asia/Tehran"
      POSTGRES_DB: book_land_db
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -U root -d book_land_db"]
      interval: 5s
      timeout: 2s
      retries: 10
    networks:
      - my_network
    volumes:
      - ./SqlScripts.sql:/docker-entrypoint-initdb.d/SqlScripts.sql
      - ./db-data/postgres/:/var/lib/postgresql/data/


  user_service:
    restart: on-failure
    build:
      context: .
      dockerfile: .
    environment:
      - DB_HOST=postgres-db
      - FILE_SERVER=http://file-server:8080
    networks:
      - my_network
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
    command: >
      sh -c "python manage.py migrate && gunicorn --bind 0.0.0.0:8000 bookLand_microservice.wsgi:application"
    depends_on:
      postgres-db:
        condition: service_healthy

networks: # Note that network must be created before running compose with this network
  my_network:
    external: true

